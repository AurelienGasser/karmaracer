doctype strict
html
  head
    title Karma Racer Race for your Soul!
    meta(http-equiv='content-type', content='text/html; charset=utf-8')
    link(rel="icon", type="image/png", href="/favicon.png")
    link(rel="apple-touch-icon", href="/images/logos/logo-114.png")
    meta(name="viewport", content="initial-scale=0.5, maximum-scale=1.0, user-scalable=0.0")
    meta(name="apple-mobile-web-app-capable", content="yes")
    script(type='text/javascript').
      var G_mapName = '#{map}';
      var G_defaultDrawEngineType = '#{default_draw_engine}';
      var G_MOBILE_DEVICE = false;
      var G_fbid = '#{fbid}';
      var G_locale = '#{locale}';
      var GKarmaOptions = {'playerName' : '#{playerName}'};
    script(type='text/javascript', src='/socket.io/socket.io.js')
    script(type='text/javascript', src='/dist/vendor_common.js')
    script(type='text/javascript', src='/dist/all_game.js')
    - if (default_draw_engine == 'WEBGL')
      script(type='text/javascript', src='/dist/vendor_webgl.js')      
    link(rel='stylesheet', href='/dist/all_game.css')
    script(type='text/javascript').
      Karma.setGoogleAnalytics();
    script(id="shader-vs", type="x-shader/x-vertex").
      attribute vec3 aVertexPosition;
      attribute vec2 aTextureCoord;  
      uniform mat4 uMVMatrix;
      uniform mat4 uPMatrix;      
      uniform mat4 flipMatrix;
      uniform mat3 scaleMatrix;
      varying highp vec2 vTextureCoord;
      void main() {
        gl_Position = flipMatrix * uPMatrix * uMVMatrix * vec4(vec3(scaleMatrix * aVertexPosition), 1.0);
        vTextureCoord = aTextureCoord;
      }
    script(id="shader-fs", type="x-shader/x-fragment").
       #ifdef GL_ES
         precision highp float;
       #endif
       varying highp vec2 vTextureCoord;
       uniform sampler2D uSampler;
       uniform vec4 uColor;
       uniform highp float uAlpha;
       uniform bool bUseTextures;
       void main() {
         if (bUseTextures) {
           vec4 color = texture2D(uSampler, vTextureCoord);
           gl_FragColor = vec4(color.rgb, uAlpha * color.a);
         } else {
           gl_FragColor = vec4(uColor.rgb, uAlpha);
         }
       }      
  body
    div#fb-root
    #debug
      #camera-debug
      #fps
      #ping
      #high-score
      #debug-sockets.info sockets
      #socketps.info
    #options-container
      #options-bar
        #options-bar-text Options
        #options-expanded
        #options-folded
      div(style="clear: both")
      #options
        div#botMenu
        div
          input#interpolate.nativeTouchEnabled(type="checkbox", autocomplete="off", checked="checked")
          label.nativeTouchEnabled(for="interpolate") Ennemies interpolation
        div
          input#show_local_physics_engine_bodies.nativeTouchEnabled(type="checkbox")
          label.nativeTouchEnabled(for="show_local_physics_engine_bodies") Show local physics engine bodies
        div
          input#show_most_up_to_date_myCar.nativeTouchEnabled(type="checkbox")
          label.nativeTouchEnabled(for="show_most_up_to_date_myCar") Show most up to date myCar
        div
          input#use_mouse_for_direction.nativeTouchEnabled(type="checkbox", checked="checked")
          label.nativeTouchEnabled(for="use_mouse_for_direction") Use mouse for direction
        div
          input#show_debug_plot.nativeTouchEnabled(type="checkbox")
          label.nativeTouchEnabled(for="show_debug_plot") Show debug plot
    canvas#game-canvas
    img#loadingImage(src='/images/loading.gif')
    div#loadingInfo
    #chat
      div#chat_msgs_wrapper
        ul#chat_msgs
      div#chat_input_wrapper
        div#chat_input_label
        input#chat_input(type="text", autocapitalize="off", autocorrect="off", autocomplete="off")
    #plot

